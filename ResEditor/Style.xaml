<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ad="http://schemas.xceed.com/wpf/xaml/avalondock"
                    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Scroll.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--<Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="2,0" />
        <Setter Property="Padding" Value="15,5" />
    </Style>-->

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="YellowGreen" CornerRadius="4" Padding="5">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Gold" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Orange" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="Gray" />
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="#cccccc" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="HorizontalGridLinesBrush" Value="LightGray" />
        <Setter Property="VerticalGridLinesBrush" Value="LightGray" />
    </Style>


    <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="Red" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Grid>
                            <Image Source="./Imgs/Warning.png"
                                ToolTip="{Binding RelativeSource={RelativeSource
                                 FindAncestor, AncestorType={x:Type DataGridRow}},
                                 Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SettingGrid" TargetType="Grid">
        <Setter Property="Width" Value="500" />
    </Style>

    <Style x:Key="SettingLableColumn" TargetType="ColumnDefinition">
        <Setter Property="Width" Value="100" />
    </Style>

    <Style TargetType="Expander" BasedOn="{StaticResource {x:Type Expander}}">
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <Style x:Key="SelectableTextBlock" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <SolidColorBrush x:Key="TabControl.HeaderBackGround" Color="#FF10a8ab" />
    <SolidColorBrush x:Key="TabControl.ActivedItemHeaderBackground" Color="#FF454545" />

    <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource {x:Type TabControl}}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Border Background="Transparent" BorderThickness="1" BorderBrush="Black" CornerRadius="10" Margin="-1">
                            <Border.Effect>
                                <BlurEffect />
                            </Border.Effect>
                        </Border>

                        <Border BorderBrush="Black" BorderThickness="1" CornerRadius="10" ClipToBounds="True" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Name="ROW0" />
                                    <RowDefinition Name="ROW1" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Name="COL0" />
                                    <ColumnDefinition Name="COL1" />
                                </Grid.ColumnDefinitions>

                                <Border Background="{StaticResource TabControl.HeaderBackGround}" Name="Mask" CornerRadius="10,10,0,0" />

                                <Border Padding="10,5" Name="TP">
                                    <TabPanel IsItemsHost="True">
                                        <TabPanel.OpacityMask>
                                            <VisualBrush Visual="{Binding ElementName=Mask}" />
                                        </TabPanel.OpacityMask>
                                    </TabPanel>
                                </Border>

                                <Grid Grid.Row="0" Name="TC">
                                    <Border Name="EB" Margin="-1" BorderThickness="0,1,0,0" BorderBrush="#CC000000">
                                        <Border.Effect>
                                            <BlurEffect Radius="5" />
                                        </Border.Effect>
                                    </Border>
                                    <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="10" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter TargetName="ROW0" Property="Height" Value="auto" />

                            <Setter TargetName="Mask" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Mask" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Mask" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="Mask" Property="CornerRadius" Value="10,10,0,0" />

                            <Setter TargetName="TP" Property="Grid.Row" Value="0" />
                            <Setter TargetName="TP" Property="Grid.Column" Value="0" />
                            <Setter TargetName="TP" Property="Grid.ColumnSpan" Value="2" />

                            <Setter TargetName="TC" Property="Grid.Column" Value="0" />
                            <Setter TargetName="TC" Property="Grid.Row" Value="1" />
                            <Setter TargetName="TC" Property="Grid.ColumnSpan" Value="2" />

                            <Setter TargetName="EB" Property="BorderThickness" Value="0,1,0,0" />
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="ROW1" Property="Height" Value="auto" />

                            <Setter TargetName="Mask" Property="Grid.Row" Value="1" />
                            <Setter TargetName="Mask" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Mask" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="Mask" Property="CornerRadius" Value="0,0,10,10" />

                            <Setter TargetName="TP" Property="Grid.Row" Value="1" />
                            <Setter TargetName="TP" Property="Grid.Column" Value="0" />
                            <Setter TargetName="TP" Property="Grid.ColumnSpan" Value="2" />

                            <Setter TargetName="TC" Property="Grid.Column" Value="0" />
                            <Setter TargetName="TC" Property="Grid.Row" Value="0" />
                            <Setter TargetName="TC" Property="Grid.ColumnSpan" Value="2" />

                            <Setter TargetName="EB" Property="BorderThickness" Value="0,0,0,1" />
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="COL0" Property="Width" Value="auto" />

                            <Setter TargetName="Mask" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Mask" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Mask" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="Mask" Property="CornerRadius" Value="10,0,0,10" />

                            <Setter TargetName="TP" Property="Grid.Row" Value="0" />
                            <Setter TargetName="TP" Property="Grid.Column" Value="0" />
                            <Setter TargetName="TP" Property="Grid.RowSpan" Value="2" />

                            <Setter TargetName="TC" Property="Grid.Column" Value="1" />
                            <Setter TargetName="TC" Property="Grid.Row" Value="0" />
                            <Setter TargetName="TC" Property="Grid.RowSpan" Value="2" />

                            <Setter TargetName="EB" Property="BorderThickness" Value="1,0,0,0" />
                        </Trigger>


                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="COL1" Property="Width" Value="auto" />

                            <Setter TargetName="Mask" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Mask" Property="Grid.Column" Value="1" />
                            <Setter TargetName="Mask" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="Mask" Property="CornerRadius" Value="0,10,10,0" />

                            <Setter TargetName="TP" Property="Grid.Row" Value="0" />
                            <Setter TargetName="TP" Property="Grid.Column" Value="1" />
                            <Setter TargetName="TP" Property="Grid.RowSpan" Value="2" />

                            <Setter TargetName="TC" Property="Grid.Column" Value="0" />
                            <Setter TargetName="TC" Property="Grid.Row" Value="0" />
                            <Setter TargetName="TC" Property="Grid.RowSpan" Value="2" />

                            <Setter TargetName="EB" Property="BorderThickness" Value="0,0,1,0" />
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
        <!--<Setter Property="TextBlock.Foreground" Value="White" />
        <Setter Property="TextBlock.FontSize" Value="14" />
        <Setter Property="TextBlock.FontWeight" Value="Bold" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Padding="2" x:Name="bbb" SnapsToDevicePixels="True" ClipToBounds="True" CornerRadius="15" >
                        <ContentPresenter x:Name="contentPresenter" 
                                              ContentSource="Header"
                                              Focusable="False" 
                                              HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}">

                            <ContentPresenter.Style>
                                <Style>
                                    <Setter Property="TextBlock.Foreground" Value="White" />
                                    <Setter Property="TextBlock.FontSize" Value="14" />
                                    <Setter Property="TextBlock.FontWeight" Value="Bold" />
                                </Style>
                            </ContentPresenter.Style>

                        </ContentPresenter>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="bbb" Property="Background" Value="#FF333333" />
                            <Setter TargetName="bbb" Property="Padding" Value="3" />
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>




                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>